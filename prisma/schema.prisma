// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int        @id @default(autoincrement())
  name           String
  email          String     @unique
  password       String
  role           String     @default("USER") // Bisa juga "ADMIN"
  profilePicture String? // URL foto profil (misalnya: /uploads/...)
  address        String? // Alamat lengkap (opsional)
  refreshToken   String? // Untuk menyimpan refresh token
  createdAt      DateTime   @default(now())
  reviews        Review[]
  wishlist       Wishlist[]
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  price       Float
  image       String?
  category    String
  stock       Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  reviews     Review[]
  wishlists   Wishlist[]
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  status    String   @default("pending") // "pending", "approved", atau "rejected"
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
}

model HeroImage {
  id        String   @id @default(uuid())
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  author        String? // Misal, nama penulis (opsional)
  published     Boolean  @default(false)
  featuredImage String? // URL gambar artikel (opsional)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
